{\rtf1\ansi\ansicpg1252\uc1 \deff0\deflang1033\deflangfe1033
{\fonttbl {\f0\froman\fcharset0\fprq2{\*\panose 02020603050405020304}Times New Roman;}
{\f1\fswiss\fcharset0\fprq2{\*\panose 020b0604020202020204}Arial;}
{\f2\fmodern\fcharset0\fprq1{\*\panose 02070309020205020404}Courier New;}
{\f3\froman\fcharset2\fprq2{\*\panose 05050102010706020507}Symbol;}
}
{\colortbl;\red0\green0\blue0;\red0\green0\blue255;\red0\green255\blue255;\red0\green255\blue0;\red255\green0\blue255;\red255\green0\blue0;\red255\green255\blue0;\red255\green255\blue255;\red0\green0\blue128;\red0\green128\blue128;\red0\green128\blue0;\red128\green0\blue128;\red128\green0\blue0;\red128\green128\blue0;\red128\green128\blue128;\red192\green192\blue192;\red0\green128\blue0;\red96\green64\blue32;\rede0\green128\blue0;\red128\green0\blue0;\red128\green96\blue32;\red0\green32\blue128;\red0\green128\blue128;\red255\green0\blue255;\red0\green0\blue0;\red112\green0\blue112;\red255\green0\blue0;}
{\stylesheet
{\widctlpar\adjustright \fs20\cgrid \snext0 Normal;}
{\paperw11900\paperh16840\margl1800\margr1800\margt1440\margb1440\gutter0\ltrsect}
{\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid \sbasedon0 \snext0 heading 1;}
{\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid \sbasedon0 \snext0 heading 2;}
{\s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid \sbasedon0 \snext0 heading 3;}
{\s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid \sbasedon0 \snext0 heading 4;}{\*\cs10 \additive Default Paragraph Font;}
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid \sbasedon0 \snext0 heading 5;}{\*\cs10 \additive Default Paragraph Font;}
{\s15\qc\sb240\sa60\widctlpar\outlinelevel0\adjustright \b\f1\fs32\kerning28\cgrid \sbasedon0 \snext15 Title;}
{\s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid \sbasedon0 \snext16 Subtitle;}
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid \sbasedon0 \snext17 BodyText;}
{\s18\widctlpar\fs22\cgrid \sbasedon0 \snext18 DenseText;}
{\s28\widctlpar\tqc\tx4320\tqr\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext28 header;}
{\s29\widctlpar\tqc\tx4320\tqr\tx8640\qr\adjustright \fs20\cgrid \sbasedon0 \snext29 footer;}
{\s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid \sbasedon0 \snext30 GroupHeader;}
{\s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext41 Code Example 0;}
{\s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext42 Code Example 1;}
{\s42\li720\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext43 Code Example 2;}
{\s43\li1080\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext44 Code Example 3;}
{\s44\li1440\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext45 Code Example 4;}
{\s45\li1800\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext46 Code Example 5;}
{\s46\li2160\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext47 Code Example 6;}
{\s47\li2520\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext48 Code Example 7;}
{\s48\li2880\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext49 Code Example 8;}
{\s49\li3240\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext50 Code Example 9;}
{\s50\li3600\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext51 Code Example 10;}
{\s51\li3960\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext52 Code Example 11;}
{\s52\li4320\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext53 Code Example 12;}
{\s53\li4680\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext53 Code Example 13;}
{\s60\li0\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext61 List Continue 0;}
{\s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext62 List Continue 1;}
{\s62\li720\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext63 List Continue 2;}
{\s63\li1080\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext64 List Continue 3;}
{\s64\li1440\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext65 List Continue 4;}
{\s65\li1800\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext66 List Continue 5;}
{\s66\li2160\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext67 List Continue 6;}
{\s67\li2520\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext68 List Continue 7;}
{\s68\li2880\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext69 List Continue 8;}
{\s69\li3240\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext70 List Continue 9;}
{\s70\li3600\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext71 List Continue 10;}
{\s71\li3960\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext72 List Continue 11;}
{\s72\li4320\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext73 List Continue 12;}
{\s73\li4680\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext73 List Continue 13;}
{\s80\li0\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext81 DescContinue 0;}
{\s81\li360\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext82 DescContinue 1;}
{\s82\li720\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext83 DescContinue 2;}
{\s83\li1080\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext84 DescContinue 3;}
{\s84\li1440\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext85 DescContinue 4;}
{\s85\li1800\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext86 DescContinue 5;}
{\s86\li2160\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext87 DescContinue 6;}
{\s87\li2520\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext88 DescContinue 7;}
{\s88\li2880\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext89 DescContinue 8;}
{\s89\li3240\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext90 DescContinue 9;}
{\s90\li3600\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext91 DescContinue 10;}
{\s91\li3960\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext92 DescContinue 11;}
{\s92\li4320\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext93 DescContinue 12;}
{\s93\li4680\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext93 DescContinue 13;}
{\s100\li0\sa30\sb30\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext101 LatexTOC 0;}
{\s101\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext102 LatexTOC 1;}
{\s102\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext103 LatexTOC 2;}
{\s103\li1080\sa21\sb21\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext104 LatexTOC 3;}
{\s104\li1440\sa18\sb18\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext105 LatexTOC 4;}
{\s105\li1800\sa15\sb15\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext106 LatexTOC 5;}
{\s106\li2160\sa12\sb12\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext107 LatexTOC 6;}
{\s107\li2520\sa9\sb9\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext108 LatexTOC 7;}
{\s108\li2880\sa6\sb6\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext109 LatexTOC 8;}
{\s109\li3240\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext110 LatexTOC 9;}
{\s110\li3600\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext111 LatexTOC 10;}
{\s111\li3960\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext112 LatexTOC 11;}
{\s112\li4320\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext113 LatexTOC 12;}
{\s113\li4680\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext113 LatexTOC 13;}
{\s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext121 \sautoupd List Bullet 0;}
{\s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext122 \sautoupd List Bullet 1;}
{\s122\fi-360\li1080\widctlpar\jclisttab\tx1080{\*\pn \pnlvlbody\ilvl0\ls3\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext123 \sautoupd List Bullet 2;}
{\s123\fi-360\li1440\widctlpar\jclisttab\tx1440{\*\pn \pnlvlbody\ilvl0\ls4\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext124 \sautoupd List Bullet 3;}
{\s124\fi-360\li1800\widctlpar\jclisttab\tx1800{\*\pn \pnlvlbody\ilvl0\ls5\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext125 \sautoupd List Bullet 4;}
{\s125\fi-360\li2160\widctlpar\jclisttab\tx2160{\*\pn \pnlvlbody\ilvl0\ls6\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext126 \sautoupd List Bullet 5;}
{\s126\fi-360\li2520\widctlpar\jclisttab\tx2520{\*\pn \pnlvlbody\ilvl0\ls7\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext127 \sautoupd List Bullet 6;}
{\s127\fi-360\li2880\widctlpar\jclisttab\tx2880{\*\pn \pnlvlbody\ilvl0\ls8\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext128 \sautoupd List Bullet 7;}
{\s128\fi-360\li3240\widctlpar\jclisttab\tx3240{\*\pn \pnlvlbody\ilvl0\ls9\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext129 \sautoupd List Bullet 8;}
{\s129\fi-360\li3600\widctlpar\jclisttab\tx3600{\*\pn \pnlvlbody\ilvl0\ls10\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext130 \sautoupd List Bullet 9;}
{\s130\fi-360\li3960\widctlpar\jclisttab\tx3960{\*\pn \pnlvlbody\ilvl0\ls11\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext131 \sautoupd List Bullet 10;}
{\s131\fi-360\li4320\widctlpar\jclisttab\tx4320{\*\pn \pnlvlbody\ilvl0\ls12\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext132 \sautoupd List Bullet 11;}
{\s132\fi-360\li4680\widctlpar\jclisttab\tx4680{\*\pn \pnlvlbody\ilvl0\ls13\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext133 \sautoupd List Bullet 12;}
{\s133\fi-360\li5040\widctlpar\jclisttab\tx5040{\*\pn \pnlvlbody\ilvl0\ls14\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext133 \sautoupd List Bullet 13;}
{\s140\fi-360\li360\widctlpar\fs20\cgrid \sbasedon0 \snext141 \sautoupd List Enum 0;}
{\s141\fi-360\li720\widctlpar\fs20\cgrid \sbasedon0 \snext142 \sautoupd List Enum 1;}
{\s142\fi-360\li1080\widctlpar\fs20\cgrid \sbasedon0 \snext143 \sautoupd List Enum 2;}
{\s143\fi-360\li1440\widctlpar\fs20\cgrid \sbasedon0 \snext144 \sautoupd List Enum 3;}
{\s144\fi-360\li1800\widctlpar\fs20\cgrid \sbasedon0 \snext145 \sautoupd List Enum 4;}
{\s145\fi-360\li2160\widctlpar\fs20\cgrid \sbasedon0 \snext146 \sautoupd List Enum 5;}
{\s146\fi-360\li2520\widctlpar\fs20\cgrid \sbasedon0 \snext147 \sautoupd List Enum 6;}
{\s147\fi-360\li2880\widctlpar\fs20\cgrid \sbasedon0 \snext148 \sautoupd List Enum 7;}
{\s148\fi-360\li3240\widctlpar\fs20\cgrid \sbasedon0 \snext149 \sautoupd List Enum 8;}
{\s149\fi-360\li3600\widctlpar\fs20\cgrid \sbasedon0 \snext150 \sautoupd List Enum 9;}
{\s150\fi-360\li3960\widctlpar\fs20\cgrid \sbasedon0 \snext151 \sautoupd List Enum 10;}
{\s151\fi-360\li4320\widctlpar\fs20\cgrid \sbasedon0 \snext152 \sautoupd List Enum 11;}
{\s152\fi-360\li4680\widctlpar\fs20\cgrid \sbasedon0 \snext153 \sautoupd List Enum 12;}
{\s153\fi-360\li5040\widctlpar\fs20\cgrid \sbasedon0 \snext153 \sautoupd List Enum 13;}
}
{\info 
{\title {\comment Darwin Simulator  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
2.2 \par
}}Darwin Simulator}
{\comment Generated by doxygen 1.9.8.}
}\pard\plain 
\sectd\pgnlcrm
{\footer \s29\widctlpar\tqc\tx4320\tqr\tx8640\qr\adjustright \fs20\cgrid {\chpgn}}
\pard\plain \s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid 
\vertalc\qc\par\par\par\par\par\par\par
\pard\plain \s15\qc\sb240\sa60\widctlpar\outlinelevel0\adjustright \b\f1\fs32\kerning28\cgrid 
{\field\fldedit {\*\fldinst TITLE \\*MERGEFORMAT}{\fldrslt Darwin Simulator}}\par
\pard\plain \s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid 
\par
\par\par\par\par\par\par\par\par\par\par\par\par
\pard\plain \s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid 
{\field\fldedit {\*\fldinst AUTHOR \\*MERGEFORMAT}{\fldrslt AUTHOR}}\par
Version 2.2\par\page\page\vertalt
\pard\plain 
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid Table of Contents\par
\pard\plain \par
{\field\fldedit {\*\fldinst TOC \\f \\*MERGEFORMAT}{\fldrslt Table of contents}}\par
\pard\plain 
\sect \sbkpage \pgndec \pgnrestart
\sect \sectd \sbknone
{\footer \s29\widctlpar\tqc\tx4320\tqr\tx8640\qr\adjustright \fs20\cgrid {\chpgn}}

\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
Concept Index\par \pard\plain 
{\tc \v Concept Index}
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Concepts\par \pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Here is a list of all documented concepts with brief descriptions:}
{
\par
\pard\plain \s101\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
{\b {\b ds::ParC} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Concept which allows user only class, derived from Par })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
\par}
\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
Class Index\par \pard\plain 
{\tc \v Class Index}
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Class List\par \pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Here are the classes, structs, unions and interfaces with brief descriptions:}
{
\par
\pard\plain \s101\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
{\b {\b ds::DarwinSimulator< Types >} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Main class which represents simulation })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAB \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b ds::Par} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Class which represents form of live, which library works with })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAO \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b ds::TArray< Types >} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Class which is used to give user more or less comfortable form of data, which is used in {\b DarwinSimulator} class })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABK \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b ds::TList< Types >} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Class which represents list of types })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABO \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
\par}
\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
File Index\par \pard\plain 
{\tc \v File Index}
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
File List\par \pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Here is a list of all documented files with brief descriptions:}
{
\par
\pard\plain \s101\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
{\b C:/Users/artem/Programming2/khapilov_a_o/prj.cw/include/darwin_simul/{\b darwin_simul.hpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAA \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
\par}
\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
Concept Documentation\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
ds::ParC Concept Reference\par \pard\plain 
{\tc\tcl2 \v ds::ParC}
{\xe \v ds::ParC}
{\bkmkstart AAAAAAAABP}
{\bkmkend AAAAAAAABP}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Concept which allows user only class, derived from Par. }}\par
{
{\f2 #include <darwin_simul.hpp>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Concept definition\par
\pard\plain 
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid {\cf17 template}<{\cf17 class} T>\par
{\cf17 concept }ds::ParC =  std::is_base_of<Par, T>::value\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Concept which allows user only class, derived from Par. \par
}}

\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
Class Documentation{\tc \v Class Documentation}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
ds::DarwinSimulator< Types > Class Template Reference\par \pard\plain 
{\tc\tcl2 \v ds::DarwinSimulator< Types >}
{\xe \v ds::DarwinSimulator< Types >}
{\bkmkstart AAAAAAAAAB}
{\bkmkend AAAAAAAAAB}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Main class which represents simulation. }}\par
{
{\f2 #include <darwin_simul.hpp>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b DarwinSimulator} (){\bkmkstart AAAAAAAAAC}
{\bkmkend AAAAAAAAAC}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Empty ctor. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b DarwinSimulator} (double dt_, double w_, double h_, double totalMass_)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Main ctor. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b ~DarwinSimulator} (){\bkmkstart AAAAAAAAAD}
{\bkmkend AAAAAAAAAD}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Empty dtor. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<ParC T> void {\b addAlive} (const T &inp)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Method, which adds organism to simulation. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<ParC T> std::vector< T * > {\b get} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Getter of organisms by type. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b getWidth} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b getHeight} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b update} (){\bkmkstart AAAAAAAAAE}
{\bkmkend AAAAAAAAAE}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Method that updates simulation for dt seconds. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b update} (int times)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Method that updates simulation some times. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b writeTo} (std::ostream &ostrm)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Function that writes simulation's state to output stream. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b readFrom} (std::istream &istrm)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Read simulation's state from input stream. }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Static Public Attributes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

static constexpr int {\b simulDim} = tSize({\b TList}<Types...>\{\}){\bkmkstart AAAAAAAAAF}
{\bkmkend AAAAAAAAAF}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Number of organism types. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
template<ParC... Types>\par
class ds::DarwinSimulator< Types >\par
}
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Main class which represents simulation. \par
}

{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Template Parameters\par}
\pard\plain \s80\li0\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i Types...} \cell }{Types of organisms that can be added to simulation \cell }
{\row }
}
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v DarwinSimulator\:ds::DarwinSimulator< Types >}
{\xe \v ds::DarwinSimulator< Types >\:DarwinSimulator}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<ParC... Types> {\b ds::DarwinSimulator}< Types >::DarwinSimulator (double  {\i dt_}, double  {\i w_}, double  {\i h_}, double  {\i totalMass_})}}
\par
{\bkmkstart AAAAAAAAAG}
{\bkmkend AAAAAAAAAG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Main ctor. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i dt_} \cell }{Simulation's time step \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i w_} \cell }{Width of the simulation's scene \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i h_} \cell }{Height of the simulation's scene \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i totalMass_} \cell }{Maximal mass of simulation's organisms' \cell }
{\row }
}
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v addAlive\:ds::DarwinSimulator< Types >}
{\xe \v ds::DarwinSimulator< Types >\:addAlive}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<ParC... Types> template<ParC T> void {\b ds::DarwinSimulator}< Types >::addAlive (const T &  {\i inp})}}
\par
{\bkmkstart AAAAAAAAAH}
{\bkmkend AAAAAAAAAH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Method, which adds organism to simulation. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Template Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i T} \cell }{Type of organism \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i inp} \cell }{Input organism \cell }
{\row }
}
}}
{\xe \v get\:ds::DarwinSimulator< Types >}
{\xe \v ds::DarwinSimulator< Types >\:get}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<ParC... Types> template<ParC T> std::vector< T * > {\b ds::DarwinSimulator}< Types >::get}}
\par
{\bkmkstart AAAAAAAAAI}
{\bkmkend AAAAAAAAAI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Getter of organisms by type. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Template Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i T} \cell }{Type which user wants to get organisms of \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Vector of organisms \par
}}}}
{\xe \v getHeight\:ds::DarwinSimulator< Types >}
{\xe \v ds::DarwinSimulator< Types >\:getHeight}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<ParC... Types> double {\b ds::DarwinSimulator}< Types >::getHeight}}
\par
{\bkmkstart AAAAAAAAAJ}
{\bkmkend AAAAAAAAAJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Height of scene \par
}}}}
{\xe \v getWidth\:ds::DarwinSimulator< Types >}
{\xe \v ds::DarwinSimulator< Types >\:getWidth}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<ParC... Types> double {\b ds::DarwinSimulator}< Types >::getWidth}}
\par
{\bkmkstart AAAAAAAAAK}
{\bkmkend AAAAAAAAAK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Width of scene \par
}}}}
{\xe \v readFrom\:ds::DarwinSimulator< Types >}
{\xe \v ds::DarwinSimulator< Types >\:readFrom}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<ParC... Types> void {\b ds::DarwinSimulator}< Types >::readFrom (std::istream &  {\i istrm})}}
\par
{\bkmkstart AAAAAAAAAL}
{\bkmkend AAAAAAAAAL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Read simulation's state from input stream. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i istrm} \cell }{Input stream \cell }
{\row }
}
}}
{\xe \v update\:ds::DarwinSimulator< Types >}
{\xe \v ds::DarwinSimulator< Types >\:update}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<ParC... Types> void {\b ds::DarwinSimulator}< Types >::update (int  {\i times})}}
\par
{\bkmkstart AAAAAAAAAM}
{\bkmkend AAAAAAAAAM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Method that updates simulation some times. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i times} \cell }{Number of times simulation updates \cell }
{\row }
}
}}
{\xe \v writeTo\:ds::DarwinSimulator< Types >}
{\xe \v ds::DarwinSimulator< Types >\:writeTo}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<ParC... Types> void {\b ds::DarwinSimulator}< Types >::writeTo (std::ostream &  {\i ostrm})}}
\par
{\bkmkstart AAAAAAAAAN}
{\bkmkend AAAAAAAAAN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Function that writes simulation's state to output stream. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i ostrm} \cell }{Output stream \cell }
{\row }
}
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
C:/Users/artem/Programming2/khapilov_a_o/prj.cw/include/darwin_simul/darwin_simul.hpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
ds::Par Class Reference\par \pard\plain 
{\tc\tcl2 \v ds::Par}
{\xe \v ds::Par}
{\bkmkstart AAAAAAAAAO}
{\bkmkend AAAAAAAAAO}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Class which represents form of live, which library works with. }}\par
{
{\f2 #include <darwin_simul.hpp>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b Par} ()=default{\bkmkstart AAAAAAAAAP}
{\bkmkend AAAAAAAAAP}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Default ctor. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Par} (double mass_, double x_, double y_, double viewRange_)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Ctor with common {\b Par} params. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

virtual {\b ~Par} ()=default{\bkmkstart AAAAAAAAAQ}
{\bkmkend AAAAAAAAAQ}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Default dtor. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b radius} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b looseMass} (double loose){\bkmkstart AAAAAAAAAR}
{\bkmkend AAAAAAAAAR}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Decrease mass. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b getMass} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b getStartMass} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b getX} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b getY} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b moveX} (double dx){\bkmkstart AAAAAAAAAS}
{\bkmkend AAAAAAAAAS}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Change organism's x coordinate by dx. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b moveY} (double dy){\bkmkstart AAAAAAAAAT}
{\bkmkend AAAAAAAAAT}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Change organism's y coordinate by dy. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b setX} (double x_){\bkmkstart AAAAAAAAAU}
{\bkmkend AAAAAAAAAU}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Change organism's x coordinate to x_. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b setY} (double y_){\bkmkstart AAAAAAAAAV}
{\bkmkend AAAAAAAAAV}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Change organism's y coordinate to y_. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b isDead} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b eat} ({\b Par} *rhs)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Lhs organism makes rhs organism dead and gain mass by the end of the turn. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b die} (){\bkmkstart AAAAAAAAAW}
{\bkmkend AAAAAAAAAW}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Makes organism look dead for user. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b hasVictim} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b writeTo} (std::ostream &ostrm) const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Write main params of an organism to ostrm. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b readFrom} (std::istream &istrm)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Read main params of an organism from istrm. }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

double {\b viewRange} = 10{\bkmkstart AAAAAAAAAX}
{\bkmkend AAAAAAAAAX}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Friends\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<ParC... Types> class {\b DarwinSimulator}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Main class which represents simulation. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Class which represents form of live, which library works with. \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v Par\:ds::Par}
{\xe \v ds::Par\:Par}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
ds::Par::Par (double  {\i mass_}, double  {\i x_}, double  {\i y_}, double  {\i viewRange_}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAAY}
{\bkmkend AAAAAAAAAY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Ctor with common {\b Par} params. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i mass_} \cell }{Start mass \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i x_} \cell }{Start x coordinate \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i y_} \cell }{Start y coordinate \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i viewRange_} \cell }{start distance organism can see other organisms for \cell }
{\row }
}
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v eat\:ds::Par}
{\xe \v ds::Par\:eat}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void ds::Par::eat ({\b Par} *  {\i rhs}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAAZ}
{\bkmkend AAAAAAAAAZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Lhs organism makes rhs organism dead and gain mass by the end of the turn. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Lhs organism makes rhs organism dead and gain mass by the end of the turn in inverse proportion to number of killers of this organism \par
}}
{\xe \v getMass\:ds::Par}
{\xe \v ds::Par\:getMass}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double ds::Par::getMass () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAABA}
{\bkmkend AAAAAAAABA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Current mass of the organism \par
}}}}
{\xe \v getStartMass\:ds::Par}
{\xe \v ds::Par\:getStartMass}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double ds::Par::getStartMass () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAABB}
{\bkmkend AAAAAAAABB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Start mass of the organism \par
}}}}
{\xe \v getX\:ds::Par}
{\xe \v ds::Par\:getX}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double ds::Par::getX () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAABC}
{\bkmkend AAAAAAAABC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Current x coordinate \par
}}}}
{\xe \v getY\:ds::Par}
{\xe \v ds::Par\:getY}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double ds::Par::getY () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAABD}
{\bkmkend AAAAAAAABD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Current y coordinate \par
}}}}
{\xe \v hasVictim\:ds::Par}
{\xe \v ds::Par\:hasVictim}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool ds::Par::hasVictim (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAABE}
{\bkmkend AAAAAAAABE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
True is organism has victim \par
}}}}
{\xe \v isDead\:ds::Par}
{\xe \v ds::Par\:isDead}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool ds::Par::isDead (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAABF}
{\bkmkend AAAAAAAABF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
True if organism is going to die \par
}}}}
{\xe \v radius\:ds::Par}
{\xe \v ds::Par\:radius}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double ds::Par::radius () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAABG}
{\bkmkend AAAAAAAABG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Radius of the cell based on its mass \par
}}}}
{\xe \v readFrom\:ds::Par}
{\xe \v ds::Par\:readFrom}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void ds::Par::readFrom (std::istream &  {\i istrm}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAABH}
{\bkmkend AAAAAAAABH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Read main params of an organism from istrm. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i istrm} \cell }{Input stream \cell }
{\row }
}
}}
{\xe \v writeTo\:ds::Par}
{\xe \v ds::Par\:writeTo}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void ds::Par::writeTo (std::ostream &  {\i ostrm}) const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAABI}
{\bkmkend AAAAAAAABI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Write main params of an organism to ostrm. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i ostrm} \cell }{Output stream \cell }
{\row }
}
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Friends And Related Symbol Documentation\par
\pard\plain 
{\xe \v DarwinSimulator\:ds::Par}
{\xe \v ds::Par\:DarwinSimulator}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<ParC... Types> friend class {\b DarwinSimulator}{\f2 [friend]}}}
\par
{\bkmkstart AAAAAAAABJ}
{\bkmkend AAAAAAAABJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Main class which represents simulation. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Template Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i Types...} \cell }{Types of organisms that can be added to simulation \cell }
{\row }
}
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
C:/Users/artem/Programming2/khapilov_a_o/prj.cw/include/darwin_simul/darwin_simul.hpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
ds::TArray< Types > Class Template Reference\par \pard\plain 
{\tc\tcl2 \v ds::TArray< Types >}
{\xe \v ds::TArray< Types >}
{\bkmkstart AAAAAAAABK}
{\bkmkend AAAAAAAABK}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Class which is used to give user more or less comfortable form of data, which is used in {\b DarwinSimulator} class. }}\par
{
{\f2 #include <darwin_simul.hpp>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TArray} (std::array< std::vector< {\b Par} * >, tSize({\b TList}< Types... >\{\}) > &inpArr)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Ctor, which converts class-data to user-data. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<ParC T> const std::vector< T * > {\b getByType} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<ParC T> void {\b putByType} (const std::vector< T > &newVec)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
template<ParC... Types>\par
class ds::TArray< Types >\par
}
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Class which is used to give user more or less comfortable form of data, which is used in {\b DarwinSimulator} class. \par
}

{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Template Parameters\par}
\pard\plain \s80\li0\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i Types...} \cell }{Types of organisms which simulation works with \cell }
{\row }
}
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v TArray\:ds::TArray< Types >}
{\xe \v ds::TArray< Types >\:TArray}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<ParC... Types> {\b ds::TArray}< Types >::TArray (std::array< std::vector< {\b Par} * >, tSize({\b TList}< Types... >\{\}) > &  {\i inpArr}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAABL}
{\bkmkend AAAAAAAABL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Ctor, which converts class-data to user-data. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i inpArr} \cell }{Class-used data \cell }
{\row }
}
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v getByType\:ds::TArray< Types >}
{\xe \v ds::TArray< Types >\:getByType}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<ParC... Types> template<ParC T> const std::vector< T * > {\b ds::TArray}< Types >::getByType () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAABM}
{\bkmkend AAAAAAAABM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Template Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i T} \cell }{Type of organisms user wants to use \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Vector of T* \par
}}}}
{\xe \v putByType\:ds::TArray< Types >}
{\xe \v ds::TArray< Types >\:putByType}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<ParC... Types> template<ParC T> void {\b ds::TArray}< Types >::putByType (const std::vector< T > &  {\i newVec}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAABN}
{\bkmkend AAAAAAAABN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Template Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i T} \cell }{Type of organisms user wants to add to object \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i newVec} \cell }{Vector of T \cell }
{\row }
}
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
C:/Users/artem/Programming2/khapilov_a_o/prj.cw/include/darwin_simul/darwin_simul.hpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
ds::TList< Types > Class Template Reference\par \pard\plain 
{\tc\tcl2 \v ds::TList< Types >}
{\xe \v ds::TList< Types >}
{\bkmkstart AAAAAAAABO}
{\bkmkend AAAAAAAABO}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Class which represents list of types. }}\par
{
{\f2 #include <darwin_simul.hpp>}}\par
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
template<class... Types>\par
class ds::TList< Types >\par
}
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Class which represents list of types. \par
}

{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Template Parameters\par}
\pard\plain \s80\li0\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i Types...} \cell }{Types which this class is storaging \cell }
{\row }
}
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
C:/Users/artem/Programming2/khapilov_a_o/prj.cw/include/darwin_simul/darwin_simul.hpp\par
}
\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
File Documentation{\tc \v File Documentation}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
darwin_simul.hpp\par \pard\plain 
{\tc\tcl2 \v C:/Users/artem/Programming2/khapilov_a_o/prj.cw/include/darwin_simul/darwin_simul.hpp}
{\xe \v C:/Users/artem/Programming2/khapilov_a_o/prj.cw/include/darwin_simul/darwin_simul.hpp}
{\bkmkstart AAAAAAAAAA}
{\bkmkend AAAAAAAAAA}
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 {\cf21 #pragma once}\par
2 {\cf21 #ifndef DARWIN_SIMUL_HPP_20230503}\par
3 {\cf21 #define DARWIN_SIMUL_HPP_20230503}\par
4 \par
5 {\cf21 #include <iostream>}\par
6 {\cf21 #include <exception>}\par
7 {\cf21 #include <cmath>}\par
8 {\cf21 #include <array>}\par
9 {\cf21 #include <vector>}\par
10 {\cf21 #include <set>}\par
11 {\cf21 #include <functional>}\par
12 {\cf21 #include <algorithm>}\par
13 {\cf21 #include <type_traits>}\par
14 {\cf21 #include <thread>}\par
15 \par
16 \par
17 \par
18 {\cf17 namespace }ds \{\par
19 \par
22     {\cf17 template}<{\cf17 class}... Types>\par
23     {\cf17 class }TList \{\};\par
24 \par
27     {\cf17 constexpr} {\cf18 int} tSize(TList<>) \{\par
28         {\cf19 return} 0;\par
29     \}\par
30 \par
36     {\cf17 template}<{\cf17 class }Head, {\cf17 class}... Tail>\par
37     {\cf17 constexpr} {\cf18 int} tSize(TList<Head, Tail...> list) \{\par
38         {\cf19 return} 1 + tSize(TList<Tail...>\{\});\par
39     \}\par
40 \par
41 \par
44     {\cf17 template}<{\cf17 class} T, {\cf17 class} Head>\par
45     {\cf18 bool} inTList(TList<T, Head>) \{\par
46         {\cf19 return} std::is_same<T, Head>::value;\par
47     \}\par
48 \par
55     {\cf17 template}<{\cf17 class }T, {\cf17 class }Head, {\cf17 class}... Tail>\par
56     {\cf18 bool} inTList(TList<T, Head, Tail...> list) \{\par
57         {\cf19 return} (std::is_same<T, Head>::value || inTList(TList<T, Tail...>\{\}));\par
58     \}\par
59 \par
60 \par
63     {\cf17 template}<{\cf17 class} T, {\cf17 class} Head>\par
64     {\cf18 int} indexTList(TList<T, Head>) \{\par
65         {\cf19 return} 0;\par
66     \}\par
67 \par
74     {\cf17 template}<{\cf17 class }T, {\cf17 class }Head, {\cf17 class}... Tail>\par
75     {\cf18 int} indexTList(TList<T, Head, Tail...> list) \{\par
76         {\cf19 return} std::is_same<T, Head>::value ? 0 : 1 + indexTList(TList<T, Tail...>\{\});\par
77     \}\par
78 \par
79 \par
80 \par
82     {\cf17 class }Par;\par
83 \par
85     {\cf17 template} <{\cf17 class} T>\par
86     {\cf17 concept }ParC = std::is_base_of<Par, T>::value;\par
87 \par
89     {\cf17 class }Par \{\par
90     {\cf17 public}:\par
91         \par
93         Par() = {\cf19 default};\par
94 \par
100         Par({\cf18 double} mass_, {\cf18 double} x_, {\cf18 double} y_, {\cf18 double} viewRange_) : startMass(mass_), mass(mass_), x(x_), y(y_), viewRange(viewRange_) \{\};\par
101 \par
103         {\cf17 virtual} ~Par() = {\cf19 default};\par
104 \par
106         {\cf18 double} radius(){\cf17  const }\{\par
107             {\cf19 return} 5 * std::pow(mass, 0.3333);\par
108         \}\par
109 \par
111         {\cf18 void} looseMass({\cf18 double} loose) \{\par
112             {\cf19 if} (loose < 0) {\cf19 throw} std::exception({\cf22 "bad loose"});\par
113             mass -= loose;\par
114         \}\par
115 \par
117         {\cf18 double} getMass(){\cf17  const }\{\par
118             {\cf19 return} mass;\par
119         \}\par
120 \par
122         {\cf18 double} getStartMass(){\cf17  const }\{\par
123             {\cf19 return} startMass;\par
124         \}\par
125 \par
127         {\cf18 double} getX(){\cf17  const }\{\par
128             {\cf19 return} x;\par
129         \}\par
130 \par
132         {\cf18 double} getY(){\cf17  const }\{\par
133             {\cf19 return} y;\par
134         \}\par
135 \par
137         {\cf18 void} moveX({\cf18 double} dx) \{\par
138             x += dx;\par
139         \}\par
140 \par
142         {\cf18 void} moveY({\cf18 double} dy) \{\par
143             y += dy;\par
144         \}\par
145 \par
147         {\cf18 void} setX({\cf18 double} x_) \{\par
148             x = x_;\par
149         \}\par
150 \par
152         {\cf18 void} setY({\cf18 double} y_) \{\par
153             y = y_;\par
154         \}\par
155 \par
157         {\cf18 bool} isDead() \{\par
158             {\cf19 return} killerNumber;\par
159         \}\par
160 \par
165         {\cf18 void} eat(Par* rhs) \{\par
166             {\cf19 if} ({\cf17 this} == rhs) {\cf19 throw} std::exception({\cf22 "Form of live cannot eat itself"});\par
167             victim = rhs;\par
168             ++rhs->killerNumber;\par
169         \}\par
170 \par
172         {\cf18 void} die() \{\par
173             ++killerNumber;\par
174         \}\par
175 \par
177         {\cf18 bool} hasVictim() \{\par
178             {\cf19 return} victim;\par
179         \}\par
180 \par
183         {\cf18 void} writeTo(std::ostream& ostrm){\cf17  const }\{\par
184             ostrm << startMass << {\cf23 ' '} << mass << {\cf23 ' '} << x << {\cf23 ' '} << y << {\cf23 ' '} << viewRange << {\cf23 ' '};\par
185         \}\par
186 \par
189         {\cf18 void} readFrom(std::istream& istrm) \{\par
190             istrm >> startMass >> mass >> x >> y >> viewRange;\par
191         \}\par
192 \par
195         {\cf17 template}<ParC... Types>\par
196         {\cf17 friend} {\cf17 class }DarwinSimulator;\par
197 \par
198         {\cf18 double} viewRange = 10;\par
199 \par
200     {\cf17 private}:\par
201 \par
202         {\cf18 double} startMass = 0;\par
203         {\cf18 double} mass = 1;\par
204 \par
205         {\cf18 double} x = 0, y = 0;\par
206 \par
207         Par* victim = {\cf17 nullptr};\par
208         {\cf18 int} killerNumber = 0;\par
209     \};\par
210 \par
215     std::ostream& operator<<(std::ostream& ostrm, {\cf17 const} Par& p) \{\par
216         p.writeTo(ostrm);\par
217         {\cf19 return} ostrm;\par
218     \}\par
219 \par
224     std::istream& operator>>(std::istream& istrm, Par& p) \{\par
225         p.readFrom(istrm);\par
226         {\cf19 return} istrm;\par
227     \}\par
228 \par
229 \par
230 \par
232     {\cf17 auto} cmp = []({\cf17 const} Par* lhs, {\cf17 const} Par* rhs) \{ {\cf19 return} (lhs->getX() == rhs->getX()) ? (lhs->getY() < rhs->getY()) : (lhs->getX() < rhs->getX()); \};\par
233 \par
235     {\cf17 template}<{\cf18 int} dim, ParC Head>\par
236     {\cf18 void} writeArrOfMultisetTo(std::array<std::multiset<Par*, {\cf17 decltype}(cmp)>, dim>& arr, TList<Head>, std::ostream& ostrm, {\cf18 int} i = 0) \{\par
237         ostrm << arr[i].size() << std::endl;\par
238         {\cf19 for} ({\cf17 auto} el : arr[i]) \{\par
239             ostrm << *reinterpret_cast<Head*>(el) << std::endl;\par
240         \}\par
241     \}\par
242 \par
251     {\cf17 template}<{\cf18 int} dim, ParC Head, ParC... Tail>\par
252     {\cf18 void} writeArrOfMultisetTo(std::array<std::multiset<Par*, {\cf17 decltype}(cmp)>, dim>& arr, TList<Head, Tail...> list, std::ostream& ostrm, {\cf18 int} i = 0) \{\par
253         ostrm << arr[i].size() << std::endl;\par
254         {\cf19 for} ({\cf17 auto} el : arr[i]) \{\par
255             ostrm << *reinterpret_cast<Head*>(el) << std::endl;\par
256         \}\par
257         writeArrOfMultisetTo(arr, TList<Tail...>\{\}, ostrm, i + 1);\par
258     \}\par
259 \par
260 \par
262     {\cf17 template}<{\cf18 int} dim, ParC Head>\par
263     {\cf18 void} readArrOfMultisetFrom(std::array<std::multiset<Par*, {\cf17 decltype}(cmp)>, dim>& arr, TList<Head>, std::istream& istrm, {\cf18 int} i = 0) \{\par
264         {\cf18 int} size = 0;\par
265         istrm >> size;\par
266         {\cf19 for} ({\cf18 int} j = 0; j < size; ++j) \{\par
267             Head var = Head();\par
268             istrm >> var;\par
269             arr[i].insert({\cf17 reinterpret_cast<}Par*{\cf17 >}({\cf17 new} Head(var)));\par
270         \}\par
271     \}\par
272 \par
281     {\cf17 template}<{\cf18 int} dim, ParC Head, ParC... Tail>\par
282     {\cf18 void} readArrOfMultisetFrom(std::array<std::multiset<Par*, {\cf17 decltype}(cmp)>, dim>& arr, TList<Head, Tail...>, std::istream& istrm, {\cf18 int} i = 0) \{\par
283         {\cf18 int} size = 0;\par
284         istrm >> size;\par
285         {\cf19 for} ({\cf18 int} j = 0; j < size; ++j) \{\par
286             Head var = Head();\par
287             istrm >> var;\par
288             arr[i].insert({\cf17 reinterpret_cast<}Par*{\cf17 >}({\cf17 new} Head(var)));\par
289         \}\par
290         readArrOfMultisetFrom(arr, TList<Tail...>\{\}, istrm, i + 1);\par
291     \}\par
292 \par
295     {\cf17 template}<ParC... Types>\par
296     {\cf17 class }TArray \{\par
297     {\cf17 public}:\par
300         TArray(std::array < std::vector<Par*>, tSize(TList<Types...>\{\}) >& inpArr) : data(inpArr) \{\};\par
301 \par
304         {\cf17 template}<ParC T>\par
305         {\cf17 const} std::vector<T*> getByType(){\cf17  const }\{\par
306             {\cf18 int} ind = indexTList(TList<T, Types...>\{\});\par
307             {\cf18 int} size = data[ind].size();\par
308             std::vector<T*> retVec(size);\par
309             {\cf19 for} ({\cf18 int} i = 0; i < size; ++i) \{\par
310                 retVec[i] = {\cf17 reinterpret_cast<}T*{\cf17 >}(data[ind][i]);\par
311             \}\par
312             {\cf19 return} retVec;\par
313         \}\par
314 \par
317         {\cf17 template}<ParC T>\par
318         {\cf18 void} putByType({\cf17 const} std::vector<T>& newVec) \{\par
319             {\cf18 int} size = data[indexTList(TList<T, Types...>\{\})].size();\par
320             std::vector<Par*>& vecToChange = data[size];\par
321             {\cf19 for} ({\cf17 auto}& el : vecToChange) {\cf17 delete} el;\par
322             {\cf18 int} newSize = newVec.size();\par
323             vecToChange.resize(newSize);\par
324             {\cf19 for} ({\cf18 int} i = 0; i < newSize; ++i) \{\par
325                 vecToChange[i] = {\cf17 new} Par(newVec[i]);\par
326             \}\par
327         \}\par
328     {\cf17 private}:\par
329         {\cf17 constexpr} {\cf17 static} TList<Types...> list;\par
330         std::array < std::vector<Par*>, tSize(list) >& data;\par
331     \};\par
332 \par
333 \par
340     {\cf17 template}<ParC T, ParC... Types>\par
341     {\cf18 void} calculations(T* myOrg, {\cf17 const} TArray<Types...>& visible, {\cf18 double} dt_) \{\};\par
342 \par
347     {\cf17 template}<ParC T>\par
348     {\cf18 void} move(T* myOrg, {\cf18 double} dt_) \{\};\par
349 \par
355     {\cf17 template}<ParC T1, ParC T2>\par
356     {\cf18 void} collision(T1* lhs, T2* rhs) \{\};\par
357 \par
362     {\cf17 template}<ParC T>\par
363     {\cf18 void} reproduction(T* myOrg, std::vector<T>& childs) \{\};\par
364 \par
373     {\cf17 template}<ParC... Types>\par
374     {\cf18 void} spawn(TArray<Types...>& organisms, {\cf18 double} massLeft, {\cf18 double} wid, {\cf18 double} high, {\cf18 double} dt_) \{\};\par
375 \par
376 \par
377 \par
380     {\cf17 template}<ParC... Types>\par
381     {\cf17 class }DarwinSimulator \{\par
382     {\cf17 public}:\par
384         {\cf17 constexpr} {\cf17 static} {\cf18 int} simulDim = tSize(TList<Types...>\{\});\par
385 \par
387         DarwinSimulator();\par
388 \par
394         DarwinSimulator({\cf18 double} dt_, {\cf18 double} w_, {\cf18 double} h_, {\cf18 double} totalMass_);\par
395 \par
397         ~DarwinSimulator();\par
398 \par
402         {\cf17 template}<ParC T>\par
403         {\cf18 void} addAlive({\cf17 const} T& inp);\par
404 \par
408         {\cf17 template}<ParC T>\par
409         std::vector<T*> get();\par
410 \par
412         {\cf18 double} getWidth();\par
413 \par
415         {\cf18 double} getHeight();\par
416 \par
418         {\cf18 void} update();\par
419 \par
422         {\cf18 void} update({\cf18 int} times);\par
423 \par
426         {\cf18 void} writeTo(std::ostream& ostrm);\par
427 \par
430         {\cf18 void} readFrom(std::istream& istrm);\par
431 \par
432     {\cf17 private}:\par
433 \par
435         {\cf17 template}<ParC Head>\par
436         {\cf17 inline} {\cf18 void} set(TList<Head>, {\cf18 int} i = 0) \{\par
437             calculations_fs[i] = [{\cf17 this}](Par* p, {\cf17 const} TArray<Types...>& arr, {\cf18 double} dt_) \{\par
438                 calculations({\cf17 reinterpret_cast<}Head*{\cf17 >}(p), arr, dt_);\par
439             \};\par
440             move_fs[i] = [](Par* p, {\cf18 double} dt_) \{\par
441                 move({\cf17 reinterpret_cast<}Head*{\cf17 >}(p), dt_);\par
442             \};\par
443             reproduction_fs[i] = [](Par* p, std::vector<Par*>& readyChildren) \{\par
444                 std::vector<Head> children;\par
445                 reproduction({\cf17 reinterpret_cast<}Head*{\cf17 >}(p), children);\par
446                 readyChildren.resize(children.size());\par
447                 {\cf19 for} ({\cf18 int} j = 0; j < children.size(); ++j) \{\par
448                     readyChildren[j] = {\cf17 reinterpret_cast<}Par*{\cf17 >}({\cf17 new} Head(children[j]));\par
449                 \}\par
450             \};\par
451         \}\par
452 \par
457         {\cf17 template}<ParC Head, ParC... Tail>\par
458         {\cf17 inline} {\cf18 void} set(TList<Head, Tail...> list, {\cf18 int} i = 0) \{\par
459             calculations_fs[i] = [{\cf17 this}](Par* p, {\cf17 const} TArray<Types...>& arr, {\cf18 double} dt_) \{\par
460                 calculations({\cf17 reinterpret_cast<}Head*{\cf17 >}(p), arr, dt_);\par
461             \};\par
462             move_fs[i] = [](Par* p, {\cf18 double} dt_) \{\par
463                 move({\cf17 reinterpret_cast<}Head*{\cf17 >}(p), dt_);\par
464             \};\par
465             reproduction_fs[i] = [](Par* p, std::vector<Par*>& readyChildren) \{\par
466                 std::vector<Head> children;\par
467                 reproduction({\cf17 reinterpret_cast<}Head*{\cf17 >}(p), children);\par
468                 readyChildren.resize(children.size());\par
469                 {\cf19 for} ({\cf18 int} j = 0; j < children.size(); ++j) \{\par
470                     readyChildren[j] = {\cf17 reinterpret_cast<}Par*{\cf17 >}({\cf17 new} Head(children[j]));\par
471                 \}\par
472             \};\par
473             set(TList<Tail...>\{\}, i + 1);\par
474         \}\par
475 \par
481         {\cf17 template}<ParC T, ParC Head>\par
482         {\cf17 inline} {\cf18 void} set1d(TList<T>, TList<Head>, {\cf18 int} i = 0, {\cf18 int} j = 0) \{\par
483             collision_fs[i][j] = {\cf17 reinterpret_cast<}{\cf18 void}(*)(Par*, Par*){\cf17 >}(&collision<T, Head>);\par
484             collision_fs[j][i] = {\cf17 reinterpret_cast<}{\cf18 void}(*)(Par*, Par*){\cf17 >}(&collision<Head, T>);\par
485         \}\par
486 \par
493         {\cf17 template}<ParC T, ParC Head, ParC... Tail>\par
494         {\cf17 inline} {\cf18 void} set1d(TList<T>, TList<Head, Tail...>, {\cf18 int} i = 0, {\cf18 int} j = 0) \{\par
495             collision_fs[i][j] = {\cf17 reinterpret_cast<}{\cf18 void}(*)(Par*, Par*){\cf17 >}(&collision<T, Head>);\par
496             collision_fs[j][i] = {\cf17 reinterpret_cast<}{\cf18 void}(*)(Par*, Par*){\cf17 >}(&collision<Head, T>);\par
497             set1d(TList<T>\{\}, TList<Tail...>\{\}, i, j + 1);\par
498         \}\par
499 \par
503         {\cf17 template}<ParC Head>\par
504         {\cf17 inline} {\cf18 void} set2d(TList<Head>, {\cf18 int} i = 0) \{\par
505             collision_fs[i][i] = {\cf17 reinterpret_cast<}{\cf18 void}(*)(Par*, Par*){\cf17 >}(&collision<Head, Head>);\par
506         \}\par
507 \par
524         {\cf17 template}<ParC Head, ParC... Tail>\par
525         {\cf17 inline} {\cf18 void} set2d(TList<Head, Tail...>, {\cf18 int} i = 0) \{\par
526             collision_fs[i][i] = {\cf17 reinterpret_cast<}{\cf18 void}(*)(Par*, Par*){\cf17 >}(&collision<Head, Head>);\par
527             set1d(TList<Head>\{\}, TList<Tail...>\{\}, i, i + 1);\par
528             set2d(TList<Tail...>\{\}, i + 1);\par
529         \}\par
530 \par
535         std::array < std::vector<Par*>, tSize(TList<Types...>\{\}) > getVisible({\cf17 const} std::multiset<Par*, {\cf17 decltype}(cmp)>::iterator& myOrg) \{\par
536             std::array < std::vector<Par*>, tSize(TList<Types...>\{\}) > retArr;\par
537 \par
538             Par* leftAl = {\cf17 new} Par;\par
539             Par* rightAl = {\cf17 new} Par;\par
540 \par
541             leftAl->setX((*myOrg)->getX() - (*myOrg)->viewRange);\par
542             rightAl->setX((*myOrg)->getX() + (*myOrg)->viewRange);\par
543 \par
544             {\cf19 for} ({\cf18 int} i = 0; i < retArr.size(); ++i) \{\par
545                 retArr[i].clear();\par
546                 {\cf17 auto} first = alives[i].lower_bound(leftAl); {\cf20 //not sure}\par
547                 {\cf17 auto} last = alives[i].upper_bound(rightAl); {\cf20 //not sure}\par
548                 {\cf19 for} ({\cf17 auto} iter = first; iter != last; ++iter) \{\par
549                     {\cf19 if} (*iter == *myOrg) \{\par
550                         {\cf19 continue};\par
551                     \}\par
552                     {\cf19 if} (((*iter)->getX() - (*myOrg)->getX()) * ((*iter)->getX() - (*myOrg)->getX()) + ((*iter)->getY() - (*myOrg)->getY()) * ((*iter)->getY() - (*myOrg)->getY()) <= (*myOrg)->viewRange * (*myOrg)->viewRange) \{\par
553                         retArr[i].push_back(*iter);\par
554                     \}\par
555                 \}\par
556             \}\par
557 \par
558             {\cf17 delete} leftAl;\par
559             {\cf17 delete} rightAl;\par
560 \par
561             {\cf19 return} retArr;\par
562         \}\par
563 \par
567         {\cf18 void} die({\cf18 int} i, std::multiset<Par*, {\cf17 decltype}(cmp)>::iterator& it) \{\par
568             std::multiset<Par*, {\cf17 decltype}(cmp)>::iterator tmp = it;\par
569             tmp = it;\par
570             ++tmp;\par
571             deathNote.push_back(*it);\par
572             alives_upd[i].erase(it);\par
573             it = tmp;\par
574         \}\par
575 \par
578         {\cf18 void} kill(Par* par) \{\par
579             {\cf19 if} (!par->victim) {\cf19 throw} std::exception({\cf22 "This form of live has no victim"});\par
580             par->mass += 0.5 * par->victim->getMass() / par->victim->killerNumber;\par
581             par->victim = {\cf17 nullptr};\par
582         \}\par
583 \par
584     {\cf17 private}:\par
585         {\cf18 double} dt = 0.01;\par
586         {\cf18 double} w = 100;\par
587         {\cf18 double} h = 100;\par
588         {\cf18 double} totalMass = 0;\par
589 \par
590         std::array<std::thread, simulDim> threads;\par
591 \par
592         std::array < std::multiset<Par*, {\cf17 decltype}(cmp)>, simulDim > alives;\par
593         std::array < std::multiset<Par*, {\cf17 decltype}(cmp)>, simulDim > alives_upd;\par
594 \par
595         std::vector<Par*> deathNote;\par
596 \par
598         std::array < std::function<void(Par*, {\cf17 const} TArray<Types...>&, {\cf18 double})>, simulDim> calculations_fs;\par
600         std::array < std::function<void(Par*, {\cf18 double})>, simulDim> move_fs;\par
602         std::array < std::array < std::function<void(Par*, Par*)>, simulDim>, simulDim> collision_fs;\par
604         std::array < std::function<void(Par*, std::vector<Par*>&)>, simulDim> reproduction_fs;\par
606         std::function<void(TArray<Types...>&, {\cf18 double}, {\cf18 double}, {\cf18 double}, {\cf18 double})> spawn_f;\par
607     \};\par
608 \par
609     {\cf17 template}<ParC... Types>\par
610     DarwinSimulator<Types...>::DarwinSimulator() \{\par
611         spawn_f = [](TArray<Types...>& alives, {\cf18 double} massLeft, {\cf18 double} wid, {\cf18 double} high, {\cf18 double} dt) \{\par
612             spawn(alives, massLeft, wid, high, dt);\par
613         \};\par
614         set(TList<Types...>\{\});\par
615         set2d(TList<Types...>\{\});\par
616     \}\par
617 \par
618     {\cf17 template}<ParC... Types>\par
619     DarwinSimulator<Types...>::DarwinSimulator(\par
620         {\cf18 double} dt_, {\cf18 double} w_, {\cf18 double} h_, {\cf18 double} totalMass_) :\par
621         dt(dt_), w(w_), h(h_), totalMass(totalMass_) \{\par
622         spawn_f = [](TArray<Types...>& alives, {\cf18 double} massLeft, {\cf18 double} wid, {\cf18 double} high, {\cf18 double} dt) \{\par
623             spawn(alives, massLeft, wid, high, dt);\par
624         \};\par
625         set(TList<Types...>\{\});\par
626         set2d(TList<Types...>\{\});\par
627     \}\par
628 \par
629     {\cf17 template}<ParC... Types>\par
630     DarwinSimulator<Types...>::~DarwinSimulator() \{\par
631         {\cf19 for} ({\cf18 int} i = 0; i != alives.size(); ++i) \{\par
632             {\cf19 for} ({\cf17 auto} j = alives[i].begin(); j != alives[i].end(); ++j) \{\par
633                 {\cf17 delete}* j;\par
634             \}\par
635         \}\par
636     \}\par
637 \par
638     {\cf17 template}<ParC... Types>\par
639     {\cf17 template}<ParC T>\par
640     {\cf18 void} DarwinSimulator<Types...>::addAlive({\cf17 const} T& inp) \{\par
641         T* myOrg = {\cf17 new} T;\par
642         *myOrg = inp;\par
643         totalMass += inp.getMass();\par
644         {\cf19 if} (!inTList(TList<T, Types...>\{\})) \{\par
645             {\cf19 throw} std::invalid_argument({\cf22 "Imposible to add this form of live"});\par
646         \}\par
647         alives[indexTList(TList<T, Types...>\{\})].insert({\cf17 reinterpret_cast<}Par*{\cf17 >}(myOrg)); {\cf20 //\'F1\'EF\'EE\'F0\'ED\'EE}\par
648         alives_upd[indexTList(TList<T, Types...>\{\})].insert({\cf17 reinterpret_cast<}Par*{\cf17 >}(myOrg));\par
649     \}\par
650 \par
651     {\cf17 template}<ParC... Types>\par
652     {\cf17 template}<ParC T>\par
653     std::vector<T*> DarwinSimulator<Types...>::get() \{\par
654         std::vector<T*> tmp;\par
655         {\cf19 for} ({\cf17 auto} al = alives[indexTList(TList<T, Types...>\{\})].begin(); al != alives[indexTList(TList<T, Types...>\{\})].end(); ++al) \{\par
656             tmp.push_back({\cf17 reinterpret_cast<}T*{\cf17 >}(*al));\par
657         \}\par
658         {\cf19 return} tmp;\par
659     \}\par
660 \par
661     {\cf17 template}<ParC... Types>\par
662     {\cf18 void} DarwinSimulator<Types...>::update() \{\par
663 \par
664         {\cf19 for} ({\cf18 int} i = 0; i != simulDim; ++i) \{\par
665             threads[i] = std::thread([{\cf17 this}, i] \{\par
666                 {\cf19 for} ({\cf17 auto} prev_it = alives[i].begin(); prev_it != alives[i].end(); ++prev_it) \{\par
667                     Par* el = *prev_it;\par
668                     {\cf17 auto} cur_it = std::find(alives_upd[i].begin(), alives_upd[i].end(), el);\par
669                     alives_upd[i].erase(cur_it);\par
670                     std::array<std::vector<Par*>, simulDim> visible = getVisible(prev_it);\par
671                     TArray<Types...> closest(visible);\par
672                     calculations_fs[i](el, closest, dt);\par
673                     alives_upd[i].insert(el);\par
674                 \}\par
675             \});\par
676         \}\par
677 \par
678         {\cf19 for} ({\cf17 auto}& thread : threads) \{\par
679             {\cf19 if} (thread.joinable()) \{\par
680                 thread.join();\par
681             \}\par
682         \}\par
683 \par
684         {\cf19 for} ({\cf18 int} i = 0; i != simulDim; ++i) \{\par
685             {\cf17 auto} j = alives_upd[i].begin();\par
686             {\cf19 while} (j != alives_upd[i].end()) \{\par
687                 {\cf19 if} ((*j)->getMass() <= 0.2 * (*j)->getStartMass()) \{\par
688                     die(i, j);\par
689                 \}\par
690                 {\cf19 else} \{\par
691                     ++j;\par
692                 \}\par
693             \}\par
694         \}\par
695         alives = alives_upd;\par
696 \par
697         {\cf19 for} ({\cf18 int} i = 0; i != simulDim; ++i) \{\par
698             {\cf19 for} ({\cf17 auto} prev_it = alives[i].begin(); prev_it != alives[i].end(); ++prev_it) \{\par
699                 Par* el = *prev_it;\par
700                 {\cf17 auto} cur_it = std::find(alives_upd[i].begin(), alives_upd[i].end(), el);\par
701                 alives_upd[i].erase(cur_it);\par
702                 move_fs[i](el, dt);\par
703                 alives_upd[i].insert(el);\par
704             \}\par
705         \}\par
706 \par
707         {\cf19 for} ({\cf18 int} i = 0; i != simulDim; ++i) \{\par
708             {\cf17 auto} j = alives_upd[i].begin();\par
709             {\cf19 while} (j != alives_upd[i].end()) \{\par
710                 {\cf19 if} ((*j)->getMass() <= 0.2 * (*j)->getStartMass()) \{\par
711                     die(i, j);\par
712                 \}\par
713                 {\cf19 else} \{\par
714                     ++j;\par
715                 \}\par
716             \}\par
717         \}\par
718         alives = alives_upd;\par
719 \par
720         std::array < std::array<std::vector<std::vector<bool>>, simulDim>, simulDim > isInteracted;\par
721         {\cf19 for} ({\cf18 int} i = 0; i < simulDim; ++i) \{\par
722             {\cf19 for} ({\cf18 int} j = 0; j < simulDim; ++j) \{\par
723                 isInteracted[i][j] = std::vector<std::vector<bool>>(alives[i].size(), std::vector<bool>(alives[j].size(), {\cf17 false}));\par
724             \}\par
725         \}\par
726         {\cf19 for} ({\cf18 int} i = 0; i < simulDim; ++i) \{\par
727             {\cf19 for} ({\cf18 int} j = 0; j < alives[i].size(); ++j) \{\par
728                 isInteracted[i][i][j][j] = {\cf17 true};\par
729             \}\par
730         \}\par
731         {\cf19 for} ({\cf18 int} i = 0; i != simulDim; ++i) \{\par
732             {\cf19 for} ({\cf17 auto} first_prev_it = alives[i].begin(); first_prev_it != alives[i].end(); ++first_prev_it) \{\par
733                 Par* first_el = *first_prev_it;\par
734                 {\cf19 for} ({\cf18 int} k = 0; k != simulDim; ++k) \{\par
735 \par
736                     Par first_seen = *first_el;\par
737                     first_seen.moveX(-first_seen.radius());\par
738                     Par last_seen = *first_el;\par
739                     last_seen.moveX(last_seen.radius());\par
740                     {\cf17 auto} begin = alives[k].lower_bound(&first_seen);\par
741                     {\cf17 auto} end = alives[k].upper_bound(&last_seen);\par
742 \par
743                     {\cf17 auto} first_cur_it = std::find(alives_upd[i].begin(), alives_upd[i].end(), first_el);\par
744                     alives_upd[i].erase(first_cur_it);\par
745                     {\cf19 for} ({\cf17 auto} second_prev_it = begin; second_prev_it != end; ++second_prev_it) \{\par
746                         Par* second_el = *second_prev_it;\par
747                         {\cf19 if} ((first_el->getX() - second_el->getX()) * (first_el->getX() - second_el->getX()) + (first_el->getY() - second_el->getY()) * (first_el->getY() - second_el->getY()) > (first_el->radius() + second_el->radius()) * (first_el->radius() + second_el->radius())) {\cf19 continue};\par
748                         {\cf19 if} (isInteracted[i][k][std::distance(alives[i].begin(), first_prev_it)][std::distance(alives[k].begin(), second_prev_it)]) {\cf19 continue};\par
749                         isInteracted[k][i][std::distance(alives[k].begin(), second_prev_it)][std::distance(alives[i].begin(), first_prev_it)] = {\cf17 true};\par
750 \par
751                         {\cf17 auto} second_cur_it = std::find(alives_upd[k].begin(), alives_upd[k].end(), second_el);\par
752                         alives_upd[k].erase(second_cur_it);\par
753                         collision_fs[i][k](first_el, second_el);\par
754                         alives_upd[k].insert(second_el);\par
755                     \}\par
756                     alives_upd[i].insert(first_el);\par
757                 \}\par
758             \}\par
759         \}\par
760         alives = alives_upd;\par
761 \par
762         {\cf19 for} ({\cf18 int} i = 0; i < simulDim; ++i) \{\par
763             {\cf19 for} ({\cf17 auto} j = alives_upd[i].begin(); j != alives_upd[i].end(); ++j) \{\par
764                 {\cf19 if} ((*j)->hasVictim()) \{\par
765                     kill(*j);\par
766                 \}\par
767             \}\par
768         \}\par
769 \par
770         {\cf19 for} ({\cf18 int} i = 0; i != simulDim; ++i) \{\par
771             std::multiset<Par*, {\cf17 decltype}(cmp)>::iterator j = alives_upd[i].begin();\par
772             {\cf19 while} (j != alives_upd[i].end()) \{\par
773                 {\cf19 if} ((*j)->isDead() || ((*j)->getMass() <= 0.2 * (*j)->getStartMass())) \{\par
774                     die(i, j);\par
775                 \}\par
776                 {\cf19 else} \{\par
777                     ++j;\par
778                 \}\par
779             \}\par
780         \}\par
781         alives = alives_upd;\par
782 \par
783         {\cf19 for} ({\cf18 int} i = 0; i != simulDim; ++i) \{\par
784             {\cf19 for} ({\cf17 auto} j = alives[i].begin(); j != alives[i].end(); ++j) \{\par
785                 std::vector<Par*> newAlives;\par
786                 reproduction_fs[i](*j, newAlives);\par
787                 {\cf19 for} ({\cf18 int} k = 0; k < newAlives.size(); ++k) \{\par
788                     alives_upd[i].insert(newAlives[k]);\par
789                 \}\par
790             \}\par
791         \}\par
792         alives = alives_upd;\par
793 \par
794         {\cf19 for} ({\cf18 int} i = 0; i != simulDim; ++i) \{\par
795             std::multiset<Par*, {\cf17 decltype}(cmp)>::iterator j = alives_upd[i].begin();\par
796             {\cf19 while} (j != alives_upd[i].end()) \{\par
797                 {\cf19 if} ((*j)->getMass() <= 0.2 * (*j)->getStartMass()) \{\par
798                     die(i, j);\par
799                 \}\par
800                 {\cf19 else} \{\par
801                     ++j;\par
802                 \}\par
803             \}\par
804         \}\par
805         alives = alives_upd;\par
806 \par
807         std::array<std::vector<Par*>, simulDim> newAlivesVec;\par
808         TArray<Types...> newAlives(newAlivesVec);\par
809         {\cf18 double} massLeft = totalMass;\par
810         {\cf19 for} ({\cf18 int} i = 0; i < simulDim; ++i) \{\par
811             {\cf19 for} ({\cf17 auto} j = alives_upd[i].begin(); j != alives_upd[i].end(); ++j) \{\par
812                 massLeft -= (*j)->getMass();\par
813             \}\par
814         \}\par
815         {\cf19 if} (massLeft < 0) {\cf19 throw} std::exception({\cf22 "mass"});\par
816         spawn_f(newAlives, massLeft, w, h, dt);\par
817         {\cf19 for} ({\cf18 int} i = 0; i < simulDim; ++i) \{\par
818             {\cf19 for} ({\cf18 int} j = 0; j < newAlivesVec[i].size(); ++j) \{\par
819                 alives_upd[i].insert(newAlivesVec[i][j]);\par
820             \}\par
821         \}\par
822         alives = alives_upd;\par
823 \par
824         {\cf19 for} ({\cf17 auto} el : deathNote) \{\par
825             {\cf17 delete} el;\par
826         \}\par
827         deathNote.clear();\par
828     \}\par
829 \par
830     {\cf17 template}<ParC... Types>\par
831     {\cf18 void} DarwinSimulator<Types...>::update({\cf18 int} times) \{\par
832         {\cf19 for} ({\cf18 int} i = 0; i < times; ++i) \{\par
833             update();\par
834         \}\par
835     \}\par
836 \par
837     {\cf17 template}<ParC... Types>\par
838     {\cf18 void} DarwinSimulator<Types...>::writeTo(std::ostream& ostrm) \{\par
839         ostrm << dt << {\cf23 ' '} << w << {\cf23 ' '} << h << {\cf23 ' '} << totalMass << std::endl;\par
840         writeArrOfMultisetTo(alives_upd, TList<Types...>\{\}, ostrm);\par
841     \}\par
842 \par
843     {\cf17 template}<ParC... Types>\par
844     {\cf18 void} DarwinSimulator<Types...>::readFrom(std::istream& istrm) \{\par
845         istrm >> dt >> w >> h >> totalMass;\par
846         {\cf19 for} ({\cf18 int} i = 0; i != alives.size(); ++i) \{\par
847             {\cf19 for} ({\cf17 auto} j = alives[i].begin(); j != alives[i].end(); ++j) \{\par
848                 {\cf17 delete}* j;\par
849             \}\par
850         \}\par
851         readArrOfMultisetFrom(alives_upd, TList<Types...>\{\}, istrm);\par
852     \}\par
853 \par
854     {\cf17 template}<ParC... Types>\par
855     {\cf18 double} DarwinSimulator<Types...>::getWidth() \{\par
856         {\cf19 return} w;\par
857     \}\par
858 \par
859     {\cf17 template}<ParC... Types>\par
860     {\cf18 double} DarwinSimulator<Types...>::getHeight() \{\par
861         {\cf19 return} h;\par
862     \}\par
863 \par
869     {\cf17 template}<{\cf17 class}... Types>\par
870     std::ostream& operator<<(std::ostream& ostrm, DarwinSimulator<Types...>& simul) \{\par
871         simul.writeTo(ostrm);\par
872         {\cf19 return} ostrm;\par
873     \}\par
874 \par
880     {\cf17 template}<{\cf17 class}... Types>\par
881     std::istream& operator>>(std::istream& istrm, DarwinSimulator<Types...>& simul) \{\par
882         simul.readFrom(istrm);\par
883         {\cf19 return} istrm;\par
884     \}\par
885 \par
886 \}\par
887 \par
888 {\cf21 #endif}\par
}

\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid Index\par 
\pard\plain 
{\tc \v Index}
{\field\fldedit {\*\fldinst INDEX \\c2 \\*MERGEFORMAT}{\fldrslt INDEX}}
}
